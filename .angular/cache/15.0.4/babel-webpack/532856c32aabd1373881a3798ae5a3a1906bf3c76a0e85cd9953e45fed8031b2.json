{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/data.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ng-select/ng-select\";\nfunction AddTaskComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \"\");\n  }\n}\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nfunction AddTaskComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\", 14);\n    i0.ɵɵtext(2, \"DeadLine\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_div_14_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.dead_line = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.dead_line)(\"ngModelOptions\", i0.ɵɵpureFunction0(2, _c0));\n  }\n}\nfunction AddTaskComponent_div_15_ng_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ng-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", task_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r7.description);\n  }\n}\nfunction AddTaskComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 8);\n    i0.ɵɵtext(2, \"Parent Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ng-select\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_div_15_Template_ng_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.parent_task = $event);\n    });\n    i0.ɵɵtemplate(4, AddTaskComponent_div_15_ng_option_4_Template, 2, 2, \"ng-option\", 17);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(3, _c0))(\"ngModel\", ctx_r2.parent_task);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.tasks);\n  }\n}\nfunction AddTaskComponent_div_16_ng_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ng-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r11.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r11.name);\n  }\n}\nfunction AddTaskComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 8);\n    i0.ɵɵtext(2, \"Parent Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ng-select\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_div_16_Template_ng_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.category_id = $event);\n    });\n    i0.ɵɵtemplate(4, AddTaskComponent_div_16_ng_option_4_Template, 2, 2, \"ng-option\", 17);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(3, _c0))(\"ngModel\", ctx_r3.category_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.categories);\n  }\n}\nexport class AddTaskComponent {\n  constructor(authService, router, dataService) {\n    this.authService = authService;\n    this.router = router;\n    this.dataService = dataService;\n    this.description = '';\n    this.error = false;\n    this.errorMessage = '';\n    this.data = {};\n    if (!this.authService.isLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n  }\n  ngOnInit() {\n    this.getTasks();\n    this.getCategories();\n  }\n  getTasks() {\n    this.tasks = this.dataService.getTasks().subscribe(data => {\n      this.tasks = data.content;\n    });\n  }\n  getCategories() {\n    this.categories = this.dataService.getCategories().subscribe(data => {\n      this.categories = data.content;\n    });\n  }\n  addTask() {\n    alert(this.parent_task);\n    if (this.sub) {\n      this.data = {\n        'description': this.description,\n        'parent_task': this.parent_task\n      };\n    } else {\n      this.data = {\n        'description': this.description,\n        'category_id': this.category_id,\n        'dead_line': this.dead_line\n      };\n    }\n    this.dataService.addTask(this.data).subscribe(data => {\n      if (data.result == 'success') {\n        this.router.navigate(['/tasks']);\n      } else {\n        this.error = true;\n        this.errors = data.errors;\n      }\n    });\n  }\n}\nAddTaskComponent.ɵfac = function AddTaskComponent_Factory(t) {\n  return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DataService));\n};\nAddTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddTaskComponent,\n  selectors: [[\"app-add-task\"]],\n  decls: 19,\n  vars: 10,\n  consts: [[2, \"width\", \"50%\", \"margin-left\", \"25%\", \"margin-top\", \"5%\"], [2, \"text-align\", \"center\"], [\"method\", \"post\", 3, \"ngSubmit\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"form-outline\", \"mb-4\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"flexCheckChecked\", \"checked\", \"\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"flexCheckChecked\", 1, \"form-check-label\"], [\"for\", \"name\", 1, \"form-label\"], [\"required\", \"\", \"id\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"class\", \"form-outline mb-4\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\"], [1, \"text-danger\"], [\"for\", \"dead_line\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"dead_line\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [3, \"ngModelOptions\", \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function AddTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Add Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AddTaskComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.addTask();\n      });\n      i0.ɵɵtemplate(4, AddTaskComponent_span_4_Template, 2, 1, \"span\", 3);\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.sub = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"label\", 7);\n      i0.ɵɵtext(9, \" Sub Task \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"hr\");\n      i0.ɵɵelementStart(11, \"label\", 8);\n      i0.ɵɵtext(12, \"description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"textarea\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_Template_textarea_ngModelChange_13_listener($event) {\n        return ctx.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, AddTaskComponent_div_14_Template, 4, 3, \"div\", 10);\n      i0.ɵɵtemplate(15, AddTaskComponent_div_15_Template, 5, 4, \"div\", 11);\n      i0.ɵɵtemplate(16, AddTaskComponent_div_16_Template, 5, 4, \"div\", 11);\n      i0.ɵɵelementStart(17, \"button\", 12);\n      i0.ɵɵtext(18, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.sub)(\"ngModelOptions\", i0.ɵɵpureFunction0(8, _c0));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.description)(\"ngModelOptions\", i0.ɵɵpureFunction0(9, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.sub);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.sub);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.sub);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm, i6.NgSelectComponent, i6.NgOptionComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AddTaskComponent","constructor","authService","router","dataService","isLoggedIn","navigate","ngOnInit","getTasks","getCategories","tasks","subscribe","data","content","categories","addTask","alert","parent_task","sub","description","category_id","dead_line","result","error","errors","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\mafcode_angular\\src\\app\\components\\add-task\\add-task.component.html","D:\\mafcode_angular\\src\\app\\components\\add-task\\add-task.component.ts"],"sourcesContent":["<div style=\"width: 50%; margin-left: 25%;margin-top: 5%;\">\n    <h1 style=\"text-align: center;\">Add Task</h1>\n    <form (ngSubmit)=\"addTask()\" method=\"post\">\n      <span *ngIf=\"error\" class=\"text-danger\">\n        {{errorMessage}}</span>\n        <!-- Name -->\n        <div class=\"form-outline mb-4\">\n            <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"sub\" [ngModelOptions]=\"{standalone:true}\" value=\"\" id=\"flexCheckChecked\" checked>\n                <label class=\"form-check-label\" for=\"flexCheckChecked\">\n                  Sub Task\n                </label>\n            </div>\n            <hr>\n        <label class=\"form-label\" for=\"name\">description</label>\n          <textarea required [(ngModel)]=\"description\" [ngModelOptions]=\"{standalone:true}\" id=\"description\" class=\"form-control\" ></textarea>\n        </div>\n\n         <!-- Email input -->\n         <div *ngIf=\"!sub\" class=\"form-outline mb-4\">\n            <label class=\"form-label\" for=\"dead_line\">DeadLine</label>\n              <input type=\"date\" [(ngModel)]=\"dead_line\" [ngModelOptions]=\"{standalone:true}\" id=\"dead_line\" class=\"form-control\" />\n            </div>\n            <!--Using items input-->\n            <div *ngIf=\"sub\">\n                <label  class=\"form-label\" for=\"name\">Parent Task</label>\n                <ng-select [ngModelOptions]=\"{standalone:true}\" [(ngModel)]=\"parent_task\">\n                    <ng-option *ngFor=\"let task of tasks\" [value]=\"task.id\">{{task.description}}</ng-option>\n                 </ng-select>\n            </div>\n          \n            <div *ngIf=\"!sub\">\n                <label class=\"form-label\" for=\"name\">Parent Category</label>\n                <ng-select [ngModelOptions]=\"{standalone:true}\" [(ngModel)]=\"category_id\">\n                   <ng-option *ngFor=\"let category of categories\" [value]=\"category.id\">{{category.name}}</ng-option>\n                </ng-select>\n            </div>\n          \n\n            \n        <!-- Submit button -->\n        <button type=\"submit\" class=\"btn btn-primary btn-block mb-4\">Save</button>\n      \n      </form>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Task } from 'src/app/model/task.model';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { DataService } from 'src/app/service/data.service';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent {\n\n  description : string = '';\n  category_id : any;\n  parent_task : any;\n  dead_line : any;\n  error: boolean = false;\n  errors : any;\n  errorMessage : string = '';\n  tasks : any;\n  categories : any;\n  sub : any;\n  data : any = {};\n  constructor( private authService : AuthService , private router : Router,private dataService : DataService){\n    if (!this.authService.isLoggedIn) {\n        this.router.navigate(['/login']);\n    }\n  }\n\n  \n  ngOnInit() {\n    this.getTasks();\n    this.getCategories();\n  }\n\n  getTasks(){\n    this.tasks = this.dataService.getTasks().subscribe(data => {\n      this.tasks = data.content;\n    });\n  }\n\n  getCategories(){\n    this.categories = this.dataService.getCategories().subscribe(data => {\n      this.categories = data.content;\n    });\n  }\n\n\n  addTask(){\n    alert(this.parent_task)\n    if(this.sub){\n      this.data = {\n        'description' : this.description,\n        'parent_task' : this.parent_task,\n      }\n    }else{\n      this.data = {\n        'description' : this.description,\n        'category_id' : this.category_id,\n        'dead_line' : this.dead_line,\n      }\n    }\n\n    this.dataService.addTask(this.data).subscribe(data => {\n      if(data.result == 'success'){\n        this.router.navigate(['/tasks']);\n      }\n      else{\n        this.error = true;\n        this.errors = data.errors;\n      }\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}