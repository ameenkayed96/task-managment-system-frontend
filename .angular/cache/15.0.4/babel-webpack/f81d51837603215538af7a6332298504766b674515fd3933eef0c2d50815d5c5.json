{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/data.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../pagination/pagination.component\";\nconst _c0 = function (a1) {\n  return [\"/task\", a1];\n};\nfunction TasksComponent_tr_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"a\", 20)(15, \"button\", 21);\n    i0.ɵɵtext(16, \" Show\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_5_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_0_0 = task_r1.id) !== null && tmp_0_0 !== undefined ? tmp_0_0 : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_1_0 = task_r1.description) !== null && tmp_1_0 !== undefined ? tmp_1_0 : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_2_0 = task_r1.created_at) !== null && tmp_2_0 !== undefined ? tmp_2_0 : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_3_0 = task_r1.dead_line) !== null && tmp_3_0 !== undefined ? tmp_3_0 : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.flag == 1 ? \"Finished\" : \"Not Finished\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_5_0 = task_r1.user.name) !== null && tmp_5_0 !== undefined ? tmp_5_0 : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c0, task_r1.id));\n  }\n}\nconst _c1 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class TasksComponent {\n  constructor(authService, router, dataService) {\n    this.authService = authService;\n    this.router = router;\n    this.dataService = dataService;\n    this.isLoading = false;\n    this.tasks = [];\n    this.notify = new EventEmitter();\n    this.paginator = {\n      total_page: 0,\n      current_page: 0\n    };\n    this.searchText = '';\n    this.page = 1;\n    this.authService.authinticated();\n  }\n  ngOnInit() {\n    this.getTasks(this.page, this.searchText);\n  }\n  receivePaginationdData(data) {\n    this.page = data.page;\n    this.getTasks(this.page, this.searchText);\n  }\n  getTasks(page, search) {\n    this.dataService.getTasks(page, search).subscribe(data => {\n      this.tasks = data.content;\n      this.paginator.total_page = data.paginator.total_page;\n      this.paginator.current_page = data.paginator.current_page;\n    });\n  }\n  search() {\n    this.page = 1;\n    this.getTasks(this.page, this.searchText);\n  }\n}\nTasksComponent.ɵfac = function TasksComponent_Factory(t) {\n  return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DataService));\n};\nTasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TasksComponent,\n  selectors: [[\"app-tasks\"]],\n  outputs: {\n    notify: \"notify\"\n  },\n  decls: 40,\n  vars: 6,\n  consts: [[1, \"container\"], [1, \"card\", 2, \"margin-top\", \"5%\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-md-10\"], [1, \"card-title\"], [1, \"col-md-2\"], [1, \"col-md-4\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Search\", \"aria-label\", \"Recipient's username\", \"aria-describedby\", \"basic-addon2\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"col-md-6\"], [\"routerLink\", \"/addTask\"], [1, \"btn\", \"btn-secondary\", \"pull-right\"], [1, \"table\", 2, \"margin-top\", \"3%\", \"table-layout\", \"fixed\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [3, \"pageOffset\", \"page\", \"paginationData\"], [\"scope\", \"row\"], [3, \"routerLink\"], [1, \"btn\", \"btn-success\", \"pull-right\"]],\n  template: function TasksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h5\", 5);\n      i0.ɵɵtext(6, \"All Tasks\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(7, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"div\", 7)(10, \"div\", 8)(11, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function TasksComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.searchText = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function TasksComponent_Template_button_click_13_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(14, \"Search\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(15, \"div\", 12);\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"a\", 13)(18, \"button\", 14);\n      i0.ɵɵtext(19, \"Add Task\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(20, \"table\", 15)(21, \"thead\")(22, \"tr\")(23, \"th\", 16);\n      i0.ɵɵtext(24, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\", 16);\n      i0.ɵɵtext(26, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\", 16);\n      i0.ɵɵtext(28, \"Creation Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"th\", 16);\n      i0.ɵɵtext(30, \"DeadLine\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"th\", 16);\n      i0.ɵɵtext(32, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"th\", 16);\n      i0.ɵɵtext(34, \"Created By\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"th\", 16);\n      i0.ɵɵtext(36, \"Destails\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(37, \"tbody\");\n      i0.ɵɵtemplate(38, TasksComponent_tr_38_Template, 17, 9, \"tr\", 17);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(39, \"app-pagination\", 18);\n      i0.ɵɵlistener(\"paginationData\", function TasksComponent_Template_app_pagination_paginationData_39_listener($event) {\n        return ctx.receivePaginationdData($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText)(\"ngModelOptions\", i0.ɵɵpureFunction0(5, _c1));\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"pageOffset\", ctx.paginator.total_page)(\"page\", ctx.paginator.current_page);\n    }\n  },\n  dependencies: [i4.NgForOf, i2.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i6.PaginationComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","TasksComponent","constructor","authService","router","dataService","total_page","current_page","authinticated","ngOnInit","getTasks","page","searchText","receivePaginationdData","data","search","subscribe","tasks","content","paginator","selectors","outputs","notify","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\mafcode_angular\\src\\app\\components\\tasks\\tasks.component.ts","D:\\mafcode_angular\\src\\app\\components\\tasks\\tasks.component.html"],"sourcesContent":["import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { DataService } from 'src/app/service/data.service';\nimport { OnInit } from '@angular/core';\nimport { PaginationComponent } from '../pagination/pagination.component';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent {\n  isLoading = false;\n  tasks : any[] = [];\n  @Output()\n  notify: EventEmitter<string> = new EventEmitter<string>();\n  // for pagination\n  total: any;\n  pageOffset: any;\n  pageIndex: any;\n  paginator : any = {\n    total_page : 0,\n    current_page : 0,\n  };\n  searchText : string='';\n  page : number = 1;\n  constructor( private authService : AuthService , private router : Router,private dataService : DataService){\n      this.authService.authinticated();\n  }\n\n  ngOnInit() {\n    this.getTasks(this.page,this.searchText);\n  }\n\n  receivePaginationdData(data : any) {\n    this.page = data.page;\n    this.getTasks(this.page,this.searchText);\n  }\n\n  getTasks(page : number, search : string){\n     this.dataService.getTasks(page,search).subscribe(data  => {\n        this.tasks = data.content;\n        this.paginator.total_page = data.paginator.total_page;\n        this.paginator.current_page = data.paginator.current_page;\n\n    });\n  }\n\n  search(){\n    this.page = 1;\n    this.getTasks(this.page,this.searchText);\n  }\n}\n","<div class=\"container\">\n    <div class=\"card\" style=\"margin-top: 5%;\">\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <div class=\"col-md-10\">\n                    <h5 class=\"card-title\">All Tasks</h5>\n                </div>\n                <div class=\"col-md-2\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"input-group mb-3\">\n                        <input type=\"text\"  [(ngModel)]=\"searchText\" [ngModelOptions]=\"{standalone:true}\" class=\"form-control\" placeholder=\"Search\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\">\n                        <div class=\"input-group-append\">\n                          <button (click)=\"search()\" class=\"btn btn-primary\" type=\"button\">Search</button>\n                        </div>\n                      </div>           \n                </div>\n                <div class=\"col-md-6\">\n                </div>\n                <div class=\"col-md-2\">\n                    <a routerLink=\"/addTask\"><button class=\"btn btn-secondary pull-right\" >Add Task</button></a>\n                </div>\n            </div>\n            <table class=\"table\" style=\"margin-top: 3%;table-layout:fixed;\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Description</th>\n                    <th scope=\"col\">Creation Date</th>\n                    <th scope=\"col\">DeadLine</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Created By</th>\n                    <th scope=\"col\">Destails</th>\n            \n                  </tr>\n                </thead>\n                <tbody>\n                 \n                  <tr *ngFor=\"let task of tasks\">\n                    <th scope=\"row\">{{task.id ?? ''}}</th>\n                    <td>{{task.description ?? ''}}</td>\n                    <td>{{task.created_at ?? ''}}</td>\n                    <td>{{task.dead_line ?? ''}}</td>\n                    <td>{{task.flag == 1 ? 'Finished' : 'Not Finished'}}</td>\n                    <td>{{task.user.name ?? ''}}</td>\n                    <td><a [routerLink]=\"[ '/task',task.id]\"><button class=\"btn btn-success pull-right\" > Show</button></a></td>\n            \n                  </tr>\n                </tbody>\n              </table>\n        </div>\n      <app-pagination  [pageOffset]=\"paginator.total_page\" (paginationData) = \"receivePaginationdData($event)\"  [page]=\"paginator.current_page\" ></app-pagination>\n    </div>\n   \n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}