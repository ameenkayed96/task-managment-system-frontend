{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/data.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../pagination/pagination.component\";\nconst _c0 = function (a1) {\n  return [\"/task\", a1];\n};\nfunction TasksComponent_tr_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"a\", 17)(11, \"button\", 18);\n    i0.ɵɵtext(12, \" Show\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.dead_line);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.flag == 1 ? \"Finished\" : \"Not Finished\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c0, task_r1.id));\n  }\n}\nexport class TasksComponent {\n  constructor(authService, router, dataService) {\n    this.authService = authService;\n    this.router = router;\n    this.dataService = dataService;\n    this.isLoading = false;\n    this.notify = new EventEmitter();\n    if (!this.authService.isLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n  }\n  ngOnInit() {\n    this.getTasks(1, '');\n  }\n  receivePaginationdData(data) {\n    this.getTasks(data.page, '');\n  }\n  getTasks(page, search) {\n    this.tasks = this.dataService.getTasks(page, search).subscribe(data => {\n      this.tasks = data.content;\n      this.paginator = data.paginator;\n    });\n  }\n}\nTasksComponent.ɵfac = function TasksComponent_Factory(t) {\n  return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DataService));\n};\nTasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TasksComponent,\n  selectors: [[\"app-tasks\"]],\n  outputs: {\n    notify: \"notify\"\n  },\n  decls: 31,\n  vars: 5,\n  consts: [[1, \"container\"], [1, \"card\", 2, \"margin-top\", \"5%\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-md-10\"], [1, \"card-title\"], [1, \"col-md-2\"], [\"routerLink\", \"/addTask\"], [1, \"btn\", \"btn-secondary\", \"pull-right\"], [1, \"col-md-4\"], [\"type\", \"text\", \"placeholder\", \"Search\", 1, \"form-control\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [1, \"col-md-8\"], [1, \"table\", 2, \"margin-top\", \"5%\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [3, \"pageOffset\", \"page\", \"pageIndex\", \"paginationData\"], [\"scope\", \"row\"], [3, \"routerLink\"], [1, \"btn\", \"btn-success\", \"pull-right\"]],\n  template: function TasksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h5\", 5);\n      i0.ɵɵtext(6, \"All Tasks\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"a\", 7)(9, \"button\", 8);\n      i0.ɵɵtext(10, \"Add Task\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"div\", 9)(13, \"input\", 10);\n      i0.ɵɵlistener(\"change\", function TasksComponent_Template_input_change_13_listener() {\n        return ctx.search();\n      })(\"ngModelChange\", function TasksComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.search = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(14, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"table\", 12)(16, \"thead\")(17, \"tr\")(18, \"th\", 13);\n      i0.ɵɵtext(19, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\", 13);\n      i0.ɵɵtext(21, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\", 13);\n      i0.ɵɵtext(23, \"DeadLine\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\", 13);\n      i0.ɵɵtext(25, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\", 13);\n      i0.ɵɵtext(27, \"Destails\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"tbody\");\n      i0.ɵɵtemplate(29, TasksComponent_tr_29_Template, 13, 7, \"tr\", 14);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"app-pagination\", 15);\n      i0.ɵɵlistener(\"paginationData\", function TasksComponent_Template_app_pagination_paginationData_30_listener($event) {\n        return ctx.receivePaginationdData($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.search);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"pageOffset\", ctx.paginator.total_page)(\"page\", ctx.paginator.current_page)(\"pageIndex\", ctx.paginator.current_page);\n    }\n  },\n  dependencies: [i4.NgForOf, i2.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i6.PaginationComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAA2B,eAAe;;;;;;;;;;;;;IC+BxDC,0BAA+B;IACbA,YAAW;IAAAA,iBAAK;IAChCA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAgD;IAAAA,iBAAK;IACzDA,0BAAI;IAAkFA,sBAAI;IAAAA,iBAAS;;;;IAJnFA,eAAW;IAAXA,gCAAW;IACvBA,eAAoB;IAApBA,yCAAoB;IACpBA,eAAkB;IAAlBA,uCAAkB;IAClBA,eAAgD;IAAhDA,qEAAgD;IAC7CA,eAAiC;IAAjCA,mEAAiC;;;ADvB5D,OAAM,MAAOC,cAAc;EAWzBC,YAAqBC,WAAyB,EAAWC,MAAe,EAASC,WAAyB;IAArF,gBAAW,GAAXF,WAAW;IAAyB,WAAM,GAANC,MAAM;IAAkB,gBAAW,GAAXC,WAAW;IAV5F,cAAS,GAAG,KAAK;IAGjB,WAAM,GAAyB,IAAIN,YAAY,EAAU;IAQrD,IAAI,CAAC,IAAI,CAACI,WAAW,CAACG,UAAU,EAAE;MAChC,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;EAEtC;EAEAC,QAAQ;IACN,IAAI,CAACC,QAAQ,CAAC,CAAC,EAAC,EAAE,CAAC;EACrB;EAEAC,sBAAsB,CAACC,IAAU;IAC/B,IAAI,CAACF,QAAQ,CAACE,IAAI,CAACC,IAAI,EAAC,EAAE,CAAC;EAC7B;EAEAH,QAAQ,CAACG,IAAa,EAAEC,MAAe;IACrC,IAAI,CAACC,KAAK,GAAG,IAAI,CAACT,WAAW,CAACI,QAAQ,CAACG,IAAI,EAACC,MAAM,CAAC,CAACE,SAAS,CAACJ,IAAI,IAAG;MACjE,IAAI,CAACG,KAAK,GAAGH,IAAI,CAACK,OAAO;MACzB,IAAI,CAACC,SAAS,GAAGN,IAAI,CAACM,SAAS;IACnC,CAAC,CAAC;EACJ;;AA9BWhB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAiB;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb3BxB,8BAAuB;MAKoBA,yBAAS;MAAAA,iBAAK;MAEzCA,8BAAsB;MACqDA,yBAAQ;MAAAA,iBAAS;MAGhGA,+BAAiB;MAEUA;QAAA,OAAUyB,YAAQ;MAAA,EAAC;QAAA;MAAA;MAAtCzB,iBAAwG;MAE5GA,2BACM;MACVA,iBAAM;MACNA,kCAA6C;MAGrBA,kBAAC;MAAAA,iBAAK;MACtBA,+BAAgB;MAAAA,4BAAW;MAAAA,iBAAK;MAChCA,+BAAgB;MAAAA,yBAAQ;MAAAA,iBAAK;MAC7BA,+BAAgB;MAAAA,uBAAM;MAAAA,iBAAK;MAC3BA,+BAAgB;MAAAA,yBAAQ;MAAAA,iBAAK;MAIjCA,8BAAO;MAELA,iEAOK;MACPA,iBAAQ;MAGlBA,2CAA+K;MAA1HA;QAAA,OAAoByB,kCAA8B;MAAA,EAAC;MAAuEzB,iBAAiB;;;MA7B3IA,gBAAoB;MAApBA,oCAAoB;MAkBxCA,gBAAQ;MAARA,mCAAQ;MAWxBA,eAAmC;MAAnCA,qDAAmC","names":["EventEmitter","i0","TasksComponent","constructor","authService","router","dataService","isLoggedIn","navigate","ngOnInit","getTasks","receivePaginationdData","data","page","search","tasks","subscribe","content","paginator","selectors","outputs","notify","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\mafcode_angular\\src\\app\\components\\tasks\\tasks.component.ts","D:\\mafcode_angular\\src\\app\\components\\tasks\\tasks.component.html"],"sourcesContent":["import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { DataService } from 'src/app/service/data.service';\nimport { OnInit } from '@angular/core';\nimport { PaginationComponent } from '../pagination/pagination.component';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent {\n  isLoading = false;\n  tasks : any ;\n  @Output()\n  notify: EventEmitter<string> = new EventEmitter<string>();\n  // for pagination\n  total: any;\n  pageOffset: any;\n  pageIndex: any;\n  paginator : any;\n\n  constructor( private authService : AuthService , private router : Router,private dataService : DataService){\n      if (!this.authService.isLoggedIn) {\n        this.router.navigate(['/login']);\n      }\n  }\n\n  ngOnInit() {\n    this.getTasks(1,'');\n  }\n\n  receivePaginationdData(data : any) {\n    this.getTasks(data.page,'');\n  }\n\n  getTasks(page : number, search : string){\n    this.tasks = this.dataService.getTasks(page,search).subscribe(data => {\n        this.tasks = data.content;\n        this.paginator = data.paginator;\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"card\" style=\"margin-top: 5%;\">\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <div class=\"col-md-10\">\n                    <h5 class=\"card-title\">All Tasks</h5>\n                </div>\n                <div class=\"col-md-2\">\n                    <a routerLink=\"/addTask\"><button class=\"btn btn-secondary pull-right\" >Add Task</button></a>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <input type=\"text\" (change)=\"search()\" [(ngModel)]=\"search\"  class=\"form-control\" placeholder=\"Search\"/>\n                </div>\n                <div class=\"col-md-8\">\n                </div>\n            </div>\n            <table class=\"table\" style=\"margin-top: 5%;\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Description</th>\n                    <th scope=\"col\">DeadLine</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Destails</th>\n            \n                  </tr>\n                </thead>\n                <tbody>\n                 \n                  <tr *ngFor=\"let task of tasks\">\n                    <th scope=\"row\">{{task.id}}</th>\n                    <td>{{task.description}}</td>\n                    <td>{{task.dead_line}}</td>\n                    <td>{{task.flag == 1 ? 'Finished' : 'Not Finished'}}</td>\n                    <td><a [routerLink]=\"[ '/task',task.id]\"><button class=\"btn btn-success pull-right\" > Show</button></a></td>\n            \n                  </tr>\n                </tbody>\n              </table>\n        </div>\n      <app-pagination  [pageOffset]=\"paginator.total_page\" (paginationData) = \"receivePaginationdData($event)\"  [page]=\"paginator.current_page\" [pageIndex]=\"paginator.current_page\"></app-pagination>\n    </div>\n   \n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}