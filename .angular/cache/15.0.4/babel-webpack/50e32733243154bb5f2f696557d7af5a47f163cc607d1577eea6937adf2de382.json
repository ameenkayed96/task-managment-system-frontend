{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/data.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../pagination/pagination.component\";\nconst _c0 = function (a1) {\n  return [\"/task\", a1];\n};\nfunction TasksComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"a\", 14)(11, \"button\", 15);\n    i0.ɵɵtext(12, \" Show\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.dead_line);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.flag == 1 ? \"Finished\" : \"Not Finished\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c0, task_r1.id));\n  }\n}\nexport class TasksComponent {\n  constructor(authService, router, dataService) {\n    this.authService = authService;\n    this.router = router;\n    this.dataService = dataService;\n    if (!this.authService.isLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n  }\n  ngOnInit() {\n    this.getTasks();\n  }\n  getTasks() {\n    this.tasks = this.dataService.getTasks().subscribe(data => {\n      this.tasks = data.content;\n      this.paginator = data.paginator;\n    });\n  }\n}\nTasksComponent.ɵfac = function TasksComponent_Factory(t) {\n  return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DataService));\n};\nTasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TasksComponent,\n  selectors: [[\"app-tasks\"]],\n  decls: 27,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"card\", 2, \"margin-top\", \"5%\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-md-10\"], [1, \"card-title\"], [1, \"col-md-2\"], [\"routerLink\", \"/addTask\"], [1, \"btn\", \"btn-secondary\", \"pull-right\"], [1, \"table\", 2, \"margin-top\", \"5%\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [3, \"length\", \"pageOffset\", \"pageIndex\"], [\"scope\", \"row\"], [3, \"routerLink\"], [1, \"btn\", \"btn-success\", \"pull-right\"]],\n  template: function TasksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h5\", 5);\n      i0.ɵɵtext(6, \"All Tasks\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"a\", 7)(9, \"button\", 8);\n      i0.ɵɵtext(10, \"Add Task\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(11, \"table\", 9)(12, \"thead\")(13, \"tr\")(14, \"th\", 10);\n      i0.ɵɵtext(15, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\", 10);\n      i0.ɵɵtext(17, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\", 10);\n      i0.ɵɵtext(19, \"DeadLine\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\", 10);\n      i0.ɵɵtext(21, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\", 10);\n      i0.ɵɵtext(23, \"Destails\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"tbody\");\n      i0.ɵɵtemplate(25, TasksComponent_tr_25_Template, 13, 7, \"tr\", 11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(26, \"app-pagination\", 12);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"length\", ctx.paginator.total)(\"pageOffset\", ctx.paginator.pageOffset)(\"pageIndex\", ctx.paginator.pageIndex);\n    }\n  },\n  dependencies: [i4.NgForOf, i2.RouterLink, i5.PaginationComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;IAwBkBA,0BAA+B;IACbA,YAAW;IAAAA,iBAAK;IAChCA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAgD;IAAAA,iBAAK;IACzDA,0BAAI;IAAkFA,sBAAI;IAAAA,iBAAS;;;;IAJnFA,eAAW;IAAXA,gCAAW;IACvBA,eAAoB;IAApBA,yCAAoB;IACpBA,eAAkB;IAAlBA,uCAAkB;IAClBA,eAAgD;IAAhDA,qEAAgD;IAC7CA,eAAiC;IAAjCA,mEAAiC;;;AClB5D,OAAM,MAAOC,cAAc;EAKzBC,YAAqBC,WAAyB,EAAWC,MAAe,EAASC,WAAyB;IAArF,gBAAW,GAAXF,WAAW;IAAyB,WAAM,GAANC,MAAM;IAAkB,gBAAW,GAAXC,WAAW;IACxF,IAAI,CAAC,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE;MAChC,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;EAEtC;EAEAC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACL,WAAW,CAACI,QAAQ,EAAE,CAACE,SAAS,CAACC,IAAI,IAAG;MACtD,IAAI,CAACF,KAAK,GAAGE,IAAI,CAACC,OAAO;MACzB,IAAI,CAACC,SAAS,GAAGF,IAAI,CAACE,SAAS;IACnC,CAAC,CAAC;EACJ;;AApBWb,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX3BnB,8BAAuB;MAKoBA,yBAAS;MAAAA,iBAAK;MAEzCA,8BAAsB;MACqDA,yBAAQ;MAAAA,iBAAS;MAGhGA,iCAA6C;MAGrBA,kBAAC;MAAAA,iBAAK;MACtBA,+BAAgB;MAAAA,4BAAW;MAAAA,iBAAK;MAChCA,+BAAgB;MAAAA,yBAAQ;MAAAA,iBAAK;MAC7BA,+BAAgB;MAAAA,uBAAM;MAAAA,iBAAK;MAC3BA,+BAAgB;MAAAA,yBAAQ;MAAAA,iBAAK;MAIjCA,8BAAO;MAELA,iEAOK;MACPA,iBAAQ;MAGlBA,sCAAkI;MACpIA,iBAAM;;;MAZ6BA,gBAAQ;MAARA,mCAAQ;MAWzBA,eAA0B;MAA1BA,4CAA0B","names":["i0","TasksComponent","constructor","authService","router","dataService","isLoggedIn","navigate","ngOnInit","getTasks","tasks","subscribe","data","content","paginator","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\mafcode_angular\\src\\app\\components\\tasks\\tasks.component.html","D:\\mafcode_angular\\src\\app\\components\\tasks\\tasks.component.ts"],"sourcesContent":["<div class=\"container\">\n    <div class=\"card\" style=\"margin-top: 5%;\">\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <div class=\"col-md-10\">\n                    <h5 class=\"card-title\">All Tasks</h5>\n                </div>\n                <div class=\"col-md-2\">\n                    <a routerLink=\"/addTask\"><button class=\"btn btn-secondary pull-right\" >Add Task</button></a>\n                </div>\n            </div>\n            <table class=\"table\" style=\"margin-top: 5%;\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Description</th>\n                    <th scope=\"col\">DeadLine</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Destails</th>\n            \n                  </tr>\n                </thead>\n                <tbody>\n                 \n                  <tr *ngFor=\"let task of tasks\">\n                    <th scope=\"row\">{{task.id}}</th>\n                    <td>{{task.description}}</td>\n                    <td>{{task.dead_line}}</td>\n                    <td>{{task.flag == 1 ? 'Finished' : 'Not Finished'}}</td>\n                    <td><a [routerLink]=\"[ '/task',task.id]\"><button class=\"btn btn-success pull-right\" > Show</button></a></td>\n            \n                  </tr>\n                </tbody>\n              </table>\n        </div>\n      <app-pagination [length]=\"paginator.total\" [pageOffset]=\"paginator.pageOffset\" [pageIndex]=\"paginator.pageIndex\"></app-pagination>\n    </div>\n   \n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { DataService } from 'src/app/service/data.service';\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent {\n\n  tasks : any ;\n  paginator : any;\n\n  constructor( private authService : AuthService , private router : Router,private dataService : DataService){\n      if (!this.authService.isLoggedIn) {\n        this.router.navigate(['/login']);\n      }\n  }\n\n  ngOnInit() {\n    this.getTasks();\n  }\n\n  getTasks(){\n    this.tasks = this.dataService.getTasks().subscribe(data => {\n        this.tasks = data.content;\n        this.paginator = data.paginator;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}