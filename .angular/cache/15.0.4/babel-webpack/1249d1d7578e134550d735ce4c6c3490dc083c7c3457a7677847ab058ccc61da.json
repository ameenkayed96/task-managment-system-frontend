{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"@angular/router\";\nfunction RegisterComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \"\");\n  }\n}\nfunction RegisterComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"span\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errors.name, \"\");\n  }\n}\nfunction RegisterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"span\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.errors.email, \"\");\n  }\n}\nfunction RegisterComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"span\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.errors.password, \"\");\n  }\n}\nfunction RegisterComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"span\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.errors.password_confirmation, \"\");\n  }\n}\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n    this.name = '';\n    this.password_confirmation = '';\n    this.error = false;\n    this.errorMessage = '';\n    if (this.authService.isLoggedIn) {\n      this.router.navigate(['/tasks']);\n    }\n  }\n  registerUser() {\n    this.authService.register(this.email, this.password, this.password_confirmation, this.name).subscribe(res => {\n      if (res) {\n        this.router.navigate(['/tasks']);\n      } else {\n        this.error = true;\n        this.errors = [];\n        this.errorMessage = \"pleaze check your information\";\n      }\n    }, error => {\n      this.error = true;\n      this.errors = error.error.errors;\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 34,\n  vars: 17,\n  consts: [[1, \"container\"], [1, \"card\", 2, \"margin-top\", \"5%\"], [2, \"width\", \"50%\", \"margin-left\", \"25%\", \"margin-top\", \"5%\"], [2, \"text-align\", \"center\"], [\"method\", \"post\", 3, \"ngSubmit\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"class\", \"errors\", 4, \"ngIf\"], [1, \"form-outline\", \"mb-4\"], [\"for\", \"name\", 1, \"form-label\"], [\"required\", \"\", \"type\", \"text\", \"id\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"password_confirmation\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password_confirmation\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\"], [1, \"text-center\"], [\"routerLink\", \"/login\"], [1, \"text-danger\"], [1, \"errors\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \"Rigster\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.registerUser();\n      });\n      i0.ɵɵtemplate(6, RegisterComponent_span_6_Template, 2, 1, \"span\", 5);\n      i0.ɵɵtemplate(7, RegisterComponent_div_7_Template, 3, 1, \"div\", 6);\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, RegisterComponent_div_12_Template, 3, 1, \"div\", 6);\n      i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 10);\n      i0.ɵɵtext(15, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(17, RegisterComponent_div_17_Template, 3, 1, \"div\", 6);\n      i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 12);\n      i0.ɵɵtext(20, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(22, RegisterComponent_div_22_Template, 3, 1, \"div\", 6);\n      i0.ɵɵelementStart(23, \"div\", 7)(24, \"label\", 14);\n      i0.ɵɵtext(25, \"Password Confirmation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.password_confirmation = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"button\", 16);\n      i0.ɵɵtext(28, \"Sign up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 17)(30, \"p\");\n      i0.ɵɵtext(31, \"member? \");\n      i0.ɵɵelementStart(32, \"a\", 18);\n      i0.ɵɵtext(33, \"Login\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error && ctx.errors.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.name)(\"ngModelOptions\", i0.ɵɵpureFunction0(13, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error && ctx.errors.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.email)(\"ngModelOptions\", i0.ɵɵpureFunction0(14, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error && ctx.errors.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password)(\"ngModelOptions\", i0.ɵɵpureFunction0(15, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error && ctx.errors.password_confirmation);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password_confirmation)(\"ngModelOptions\", i0.ɵɵpureFunction0(16, _c0));\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","RegisterComponent","constructor","authService","router","isLoggedIn","navigate","registerUser","register","email","password","password_confirmation","name","subscribe","res","error","errors","errorMessage","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\mafcode_angular\\src\\app\\components\\register\\register.component.html","D:\\mafcode_angular\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["<div class=\"container\">\n  <div class=\"card\" style=\"margin-top: 5%;\">\n    <div style=\"width: 50%; margin-left: 25%;margin-top: 5%;\">\n      <h1 style=\"text-align: center;\">Rigster</h1>\n      <form (ngSubmit)=\"registerUser()\" method=\"post\" >\n        <span *ngIf=\"error\" class=\"text-danger\">\n          {{errorMessage}}</span>\n          <!-- Name -->\n          <div *ngIf=\"error && errors.name\" class=\"errors\">\n            <span  class=\"text-danger\">\n                {{errors.name}}</span>\n        </div>\n          <div class=\"form-outline mb-4\">\n          <label class=\"form-label\" for=\"name\">Name</label>\n            <input required type=\"text\" [(ngModel)]=\"name\" [ngModelOptions]=\"{standalone:true}\" id=\"name\" class=\"form-control\" />\n          </div>\n          <div *ngIf=\"error && errors.email\" class=\"errors\">\n            <span  class=\"text-danger\">\n                {{errors.email}}</span>\n        </div>\n           <!-- Email input -->\n           <div class=\"form-outline mb-4\">\n              <label class=\"form-label\" for=\"email\">Email address</label>\n                <input type=\"email\" [(ngModel)]=\"email\" [ngModelOptions]=\"{standalone:true}\" id=\"email\" class=\"form-control\" />\n              </div>\n  \n               <!-- Password -->\n               <div *ngIf=\"error && errors.password\" class=\"errors\">\n                <span  class=\"text-danger\">\n                    {{errors.password}}</span>\n            </div>\n          <div class=\"form-outline mb-4\">\n              <label class=\"form-label\" for=\"password\">Password</label>\n                <input type=\"password\" [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone:true}\" id=\"password\" class=\"form-control\" />\n            </div>\n      \n             <!-- Password Confirmation -->\n             <div *ngIf=\"error && errors.password_confirmation\" class=\"errors\">\n              <span  class=\"text-danger\">\n                  {{errors.password_confirmation}}</span>\n          </div>\n          <div class=\"form-outline mb-4\">\n            <label class=\"form-label\" for=\"password_confirmation\">Password Confirmation</label>\n              <input type=\"password\" [(ngModel)]=\"password_confirmation\" [ngModelOptions]=\"{standalone:true}\" id=\"password_confirmation\" class=\"form-control\" />\n          </div>\n        \n          <!-- Submit button -->\n          <button type=\"submit\" class=\"btn btn-primary btn-block mb-4\">Sign up</button>\n        \n          <!-- Register buttons -->\n          <div class=\"text-center\">\n            <p>member? <a routerLink=\"/login\">Login</a></p>\n          </div>\n        </form>\n  </div>\n  </div>\n</div>\n\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  email : string = '';\n  password : string = '';\n  name : string = '';\n  password_confirmation : string = '';\n  error: boolean = false;\n  errorMessage : string = '';\n  errors : any;\n\n  constructor( private authService : AuthService , private router : Router){\n      if (this.authService.isLoggedIn) {\n        this.router.navigate(['/tasks']);\n    }\n  }\n\n registerUser(){\n  this.authService.register(this.email , this.password, this.password_confirmation, this.name).subscribe(res => {\n    if(res){\n      this.router.navigate(['/tasks']);\n    }\n    else{\n      this.error = true;\n      this.errors = [];\n      this.errorMessage = \"pleaze check your information\";\n    }\n  },\n    error => {\n      this.error = true;\n      this.errors = error.error.errors;\n  });\n }\n \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}