{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \"\");\n  }\n}\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.data = {};\n    this.email = '';\n    this.password = '';\n    this.errorMessage = '';\n    if (this.authService.isLoggedIn) {\n      this.router.navigate(['/']);\n    }\n  }\n  loginUser() {\n    if (this.authService.login(this.email, this.password).subscribe()) {\n      this.router.navigate(['/']);\n    } else {\n      this.errorMessage = \"pleaze check your data\";\n    }\n  }\n  getToken() {\n    console.log(this.authService.isLoggedIn);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 43,\n  vars: 9,\n  consts: [[2, \"width\", \"50%\", \"margin-left\", \"25%\", \"margin-top\", \"5%\"], [2, \"text-align\", \"center\"], [\"method\", \"post\", 3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"firstname\", \"name\", \"firstname\", 1, \"form-control\", \"rounded-0\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"form-outline\", \"mb-4\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [1, \"row\", \"mb-4\"], [1, \"col\", \"d-flex\", \"justify-content-center\"], [1, \"form-check\"], [\"for\", \"form2Example31\", 1, \"form-check-label\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"form2Example31\", \"checked\", \"\", 1, \"form-check-input\"], [1, \"col\"], [\"href\", \"#!\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\"], [1, \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-link\", \"btn-floating\", \"mx-1\"], [1, \"fab\", \"fa-facebook-f\"], [1, \"fab\", \"fa-google\"], [1, \"fab\", \"fa-twitter\"], [1, \"fab\", \"fa-github\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.loginUser();\n      });\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\");\n      i0.ɵɵtext(6, \"Firstname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵtemplate(8, LoginComponent_span_8_Template, 2, 1, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 6)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 11)(18, \"div\", 12)(19, \"div\", 13)(20, \"label\", 14);\n      i0.ɵɵtext(21, \" Remember me \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 16)(24, \"a\", 17);\n      i0.ɵɵtext(25, \"Forgot password?\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"button\", 18);\n      i0.ɵɵtext(27, \"Sign in\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 19)(29, \"p\");\n      i0.ɵɵtext(30, \"Not a member? \");\n      i0.ɵɵelementStart(31, \"a\", 17);\n      i0.ɵɵtext(32, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"p\");\n      i0.ɵɵtext(34, \"or sign up with:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"button\", 20);\n      i0.ɵɵelement(36, \"i\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"button\", 20);\n      i0.ɵɵelement(38, \"i\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"button\", 20);\n      i0.ɵɵelement(40, \"i\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"button\", 20);\n      i0.ɵɵelement(42, \"i\", 24);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.errorMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.email)(\"ngModelOptions\", i0.ɵɵpureFunction0(7, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password)(\"ngModelOptions\", i0.ɵɵpureFunction0(8, _c0));\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAYQA,gCAA+C;IAC7CA,YAAgB;IAAAA,iBAAO;;;;IAAvBA,eAAgB;IAAhBA,mDAAgB;;;;;;;;ACH1B,OAAM,MAAOC,cAAc;EAGzBC,YAAqBC,WAAyB,EAAWC,MAAe;IAAnD,gBAAW,GAAXD,WAAW;IAAyB,WAAM,GAANC,MAAM;IAF/D,SAAI,GAAG,EAAE;IAQR,UAAK,GAAY,EAAE;IACnB,aAAQ,GAAY,EAAE;IACtB,iBAAY,GAAY,EAAE;IAPvB,IAAI,IAAI,CAACD,WAAW,CAACE,UAAU,EAAE;MAC/B,IAAI,CAACD,MAAM,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;EAEjC;EAMAC,SAAS;IACP,IAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC,IAAI,CAACC,KAAK,EAAG,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,EAAE,EAAC;MAChE,IAAI,CAACP,MAAM,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;KAC5B,MACG;MACF,IAAI,CAACM,YAAY,GAAG,wBAAwB;;EAEhD;EAEAC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,WAAW,CAACE,UAAU,CAAC;EAC1C;;AAxBWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV3BpB,8BAA0D;MACtBA,qBAAK;MAAAA,iBAAK;MAC1CA,+BAA6C;MAAvCA;QAAA,OAAYqB,eAAW;MAAA,EAAC;MAC5BrB,8BAAwB;MACfA,yBAAS;MAAAA,iBAAQ;MACxBA,2BAME;MACFA,iEACyB;MAC3BA,iBAAM;MAEJA,8BAA+B;MACOA,8BAAa;MAAAA,iBAAQ;MACzDA,iCAA+G;MAA3FA;QAAA;MAAA,EAAmB;MAAvCA,iBAA+G;MAIjHA,+BAA+B;MACcA,yBAAQ;MAAAA,iBAAQ;MAC3DA,kCAAwH;MAAjGA;QAAA;MAAA,EAAsB;MAA7CA,iBAAwH;MAI1HA,gCAAsB;MAIwCA,8BAAY;MAAAA,iBAAQ;MAC5EA,6BAAuF;MACzFA,iBAAM;MAGRA,gCAAiB;MAEFA,iCAAgB;MAAAA,iBAAI;MAKrCA,mCAA6D;MAAAA,wBAAO;MAAAA,iBAAS;MAG7EA,gCAAyB;MACpBA,+BAAc;MAAAA,8BAAa;MAAAA,yBAAQ;MAAAA,iBAAI;MAC1CA,0BAAG;MAAAA,iCAAgB;MAAAA,iBAAI;MACvBA,mCAA6D;MAC3DA,yBAAiC;MACnCA,iBAAS;MAETA,mCAA6D;MAC3DA,yBAA6B;MAC/BA,iBAAS;MAETA,mCAA6D;MAC3DA,yBAA8B;MAChCA,iBAAS;MAETA,mCAA6D;MAC3DA,yBAA6B;MAC/BA,iBAAS;;;MAtDTA,eAAiC;MAAjCA,8CAAiC;MAE5BA,eAAkB;MAAlBA,uCAAkB;MAMHA,eAAmB;MAAnBA,mCAAmB;MAMhBA,eAAsB;MAAtBA,sCAAsB","names":["i0","LoginComponent","constructor","authService","router","isLoggedIn","navigate","loginUser","login","email","password","subscribe","errorMessage","getToken","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\mafcode_angular\\src\\app\\components\\login\\login.component.html","D:\\mafcode_angular\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["<div style=\"width: 50%; margin-left: 25%;margin-top: 5%;\">\n    <h1 style=\"text-align: center;\">Login</h1>\n    <form (ngSubmit)=\"loginUser()\" method=\"post\">\n      <div class=\"form-group\">\n        <label>Firstname</label>\n        <input\n          type=\"text\"\n          formControlName=\"firstname\"\n          name=\"firstname\"\n          class=\"form-control rounded-0\"\n          [class.is-invalid]=\"errorMessage\"\n        />\n        <span *ngIf=\"errorMessage\" class=\"text-danger\">\n          {{errorMessage}}</span>\n      </div>\n        <!-- Email input -->\n        <div class=\"form-outline mb-4\">\n        <label class=\"form-label\" for=\"email\">Email address</label>\n          <input type=\"email\" [(ngModel)]=\"email\" [ngModelOptions]=\"{standalone:true}\" id=\"email\" class=\"form-control\" />\n        </div>\n      \n        <!-- Password input -->\n        <div class=\"form-outline mb-4\">\n            <label class=\"form-label\" for=\"password\">Password</label>\n          <input type=\"password\" [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone:true}\" id=\"password\" class=\"form-control\" />\n        </div>\n      \n        <!-- 2 column grid layout for inline styling -->\n        <div class=\"row mb-4\">\n          <div class=\"col d-flex justify-content-center\">\n            <!-- Checkbox -->\n            <div class=\"form-check\">\n                <label class=\"form-check-label\" for=\"form2Example31\"> Remember me </label>\n              <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"form2Example31\" checked />\n            </div>\n          </div>\n      \n          <div class=\"col\">\n            <!-- Simple link -->\n            <a href=\"#!\">Forgot password?</a>\n          </div>\n        </div>\n      \n        <!-- Submit button -->\n        <button type=\"submit\" class=\"btn btn-primary btn-block mb-4\">Sign in</button>\n      \n        <!-- Register buttons -->\n        <div class=\"text-center\">\n          <p>Not a member? <a href=\"#!\">Register</a></p>\n          <p>or sign up with:</p>\n          <button type=\"button\" class=\"btn btn-link btn-floating mx-1\">\n            <i class=\"fab fa-facebook-f\"></i>\n          </button>\n      \n          <button type=\"button\" class=\"btn btn-link btn-floating mx-1\">\n            <i class=\"fab fa-google\"></i>\n          </button>\n      \n          <button type=\"button\" class=\"btn btn-link btn-floating mx-1\">\n            <i class=\"fab fa-twitter\"></i>\n          </button>\n      \n          <button type=\"button\" class=\"btn btn-link btn-floating mx-1\">\n            <i class=\"fab fa-github\"></i>\n          </button>\n        </div>\n      </form>\n\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent {\n  data = {};\n\n  constructor( private authService : AuthService , private router : Router){\n      if (this.authService.isLoggedIn) {\n        this.router.navigate(['/']);\n    }\n  }\n\n   email : string = '';\n   password : string = '';\n   errorMessage : string = '';\n\n  loginUser(){\n    if(this.authService.login(this.email , this.password).subscribe()){\n      this.router.navigate(['/']);\n    }\n    else{\n      this.errorMessage = \"pleaze check your data\";\n    }\n  }\n\n  getToken(){\n    console.log(this.authService.isLoggedIn);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}